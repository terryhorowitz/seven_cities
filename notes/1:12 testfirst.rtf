{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12400\viewh12940\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li171\fi48\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Mammals review\

\b0 \
myMammal.__proto__ ==> actual prototype of myMammal\
Mammal.prototype ==> what Mammal\'92s children will get as their prototype\
\
new:\
1. creates an empty object \{\}\
2. myMammal.__proto__ gets set to Mammal.prototype\
3. run Mammal with \'93this\'94 set to myMammal\
4. returns object and sets it to myMammal\
\
the \'93parent\'94 function can\'92t use what\'92s in their .prototype, it\'92s only for their children.\
\
myMammal.__proto__ = Mammal.prototype\
AND\
myMammal.__proto__.__proto__ === Mammal.prototype.__proto__\
\
to create a new object with object.create instead of new: var myMammal = Object.create(Mammal.prototype)\
have to use Mammal.prototype because you want it to inherent the children\'92s properties.\
allows you to set the __proto__ to whatever you want.\
you don\'92t necessarily need a constructor function, but you probably want to have one.\
\
using \'93call\'94 because it lets you chance the \'93this\'94.\
\
\

\b higher order functions:\

\b0 functions that return functions or take funcs as variables}